ZPA_CL
| extend ParsedData = parse_json(Message)
| where isnotnull(ParsedData.ConnectorGroup)
| project
    EventVendor="Zscaler",
    EventProduct="Private Access",
    LogTimestamp = ParsedData.LogTimestamp, 
    Customer = ParsedData.Customer, 
    SessionID = ParsedData.SessionID, 
    SessionType = ParsedData.SessionType, 
    SessionStatus = ParsedData.SessionStatus, 
    Version = ParsedData.Version, 
    Platform = ParsedData.Platform, 
    ZEN = ParsedData.ZEN, 
    Connector = ParsedData.Connector, 
    ConnectorGroup = ParsedData.ConnectorGroup, 
    PrivateIP = ParsedData.PrivateIP, 
    PublicIP = ParsedData.PublicIP, 
    Latitude = ParsedData.Latitude, 
    Longitude = ParsedData.Longitude, 
    CountryCode = ParsedData.CountryCode, 
    TimestampAuthentication = ParsedData.TimestampAuthentication, 
    TimestampUnAuthentication = ParsedData.TimestampUnAuthentication, 
    CPUUtilization = ParsedData.CPUUtilization, 
    MemUtilization = ParsedData.MemUtilization, 
    ServiceCount = ParsedData.ServiceCount, 
    InterfaceDefRoute = ParsedData.InterfaceDefRoute, 
    DefRouteGW = ParsedData.DefRouteGW, 
    PrimaryDNSResolver = ParsedData.PrimaryDNSResolver, 
    HostStartTime = ParsedData.HostStartTime, 
    ConnectorStartTime = ParsedData.ConnectorStartTime, 
    NumOfInterfaces = ParsedData.NumOfInterfaces, 
    BytesRxInterface = ParsedData.BytesRxInterface, 
    PacketsRxInterface = ParsedData.PacketsRxInterface, 
    ErrorsRxInterface = ParsedData.ErrorsRxInterface, 
    DiscardsRxInterface = ParsedData.DiscardsRxInterface, 
    BytesTxInterface = ParsedData.BytesTxInterface, 
    PacketsTxInterface = ParsedData.PacketsTxInterface, 
    ErrorsTxInterface = ParsedData.ErrorsTxInterface, 
    DiscardsTxInterface = ParsedData.DiscardsTxInterface, 
    TotalBytesRx = ParsedData.TotalBytesRx, 
    TotalBytesTx = ParsedData.TotalBytesTx, 
    MicroTenantID = ParsedData.MicroTenantID,
    Message = Message;