ZPA_CL
| extend ParsedLog = parse_json(Message)
| where isnotnull(ParsedLog.ServiceEdge)
| project
    EventVendor="Zscaler",
    EventProduct="Private Access",
    LogTimestamp = todatetime(ParsedLog.LogTimestamp),
    Customer = tostring(ParsedLog.Customer),
    SessionID = tostring(ParsedLog.SessionID),
    SessionType = tostring(ParsedLog.SessionType),
    SessionStatus = tostring(ParsedLog.SessionStatus),
    Version = tostring(ParsedLog.Version),
    PackageVersion = tostring(ParsedLog.PackageVersion),
    Platform = tostring(ParsedLog.Platform),
    ZEN = tostring(ParsedLog.ZEN),
    ServiceEdge = tostring(ParsedLog.ServiceEdge),
    ServiceEdgeGroup = tostring(ParsedLog.ServiceEdgeGroup),
    PrivateIP = tostring(ParsedLog.PrivateIP),
    PublicIP = tostring(ParsedLog.PublicIP),
    Latitude = todouble(ParsedLog.Latitude),
    Longitude = todouble(ParsedLog.Longitude),
    CountryCode = tostring(ParsedLog.CountryCode),
    TimestampAuthentication = todatetime(ParsedLog.TimestampAuthentication),
    TimestampUnAuthentication = todatetime(ParsedLog.TimestampUnAuthentication),
    CPUUtilization = toint(ParsedLog.CPUUtilization),
    MemUtilization = toint(ParsedLog.MemUtilization),
    InterfaceDefRoute = tostring(ParsedLog.InterfaceDefRoute),
    DefRouteGW = tostring(ParsedLog.DefRouteGW),
    PrimaryDNSResolver = tostring(ParsedLog.PrimaryDNSResolver),
    HostUpTime = tostring(ParsedLog.HostUpTime),
    ServiceEdgeStartTime = tostring(ParsedLog.ServiceEdgeStartTime),
    NumOfInterfaces = toint(ParsedLog.NumOfInterfaces),
    BytesRxInterface = toint(ParsedLog.BytesRxInterface),
    PacketsRxInterface = toint(ParsedLog.PacketsRxInterface),
    ErrorsRxInterface = toint(ParsedLog.ErrorsRxInterface),
    DiscardsRxInterface = toint(ParsedLog.DiscardsRxInterface),
    BytesTxInterface = toint(ParsedLog.BytesTxInterface),
    PacketsTxInterface = toint(ParsedLog.PacketsTxInterface),
    ErrorsTxInterface = toint(ParsedLog.ErrorsTxInterface),
    DiscardsTxInterface = toint(ParsedLog.DiscardsTxInterface),
    TotalBytesRx = tolong(ParsedLog.TotalBytesRx),
    TotalBytesTx = tolong(ParsedLog.TotalBytesTx),
    MicroTenantID = tostring(ParsedLog.MicroTenantID),
    Message = Message;