ZPA_CL
| extend ParsedData = parse_json(Message)
| where isnotnull(ParsedData.Exporter)
| project
    EventVendor="Zscaler",
    EventProduct="Private Access", 
    LogTimestamp = todatetime(ParsedData.LogTimestamp),
    ConnectionID = tostring(ParsedData.ConnectionID),
    Exporter = tostring(ParsedData.Exporter),
    TimestampRequestReceiveStart = todatetime(ParsedData.TimestampRequestReceiveStart),
    TimestampRequestReceiveHeaderFinish = todatetime(ParsedData.TimestampRequestReceiveHeaderFinish),
    TimestampRequestReceiveFinish = todatetime(ParsedData.TimestampRequestReceiveFinish),
    TimestampRequestTransmitStart = todatetime(ParsedData.TimestampRequestTransmitStart),
    TimestampRequestTransmitFinish = todatetime(ParsedData.TimestampRequestTransmitFinish),
    TimestampResponseReceiveStart = todatetime(ParsedData.TimestampResponseReceiveStart),
    TimestampResponseReceiveFinish = todatetime(ParsedData.TimestampResponseReceiveFinish),
    TimestampResponseTransmitStart = todatetime(ParsedData.TimestampResponseTransmitStart),
    TimestampResponseTransmitFinish = todatetime(ParsedData.TimestampResponseTransmitFinish),
    TotalTimeRequestReceive = toint(ParsedData.TotalTimeRequestReceive),
    TotalTimeRequestTransmit = toint(ParsedData.TotalTimeRequestTransmit),
    TotalTimeResponseReceive = toint(ParsedData.TotalTimeResponseReceive),
    TotalTimeResponseTransmit = toint(ParsedData.TotalTimeResponseTransmit),
    TotalTimeConnectionSetup = toint(ParsedData.TotalTimeConnectionSetup),
    TotalTimeServerResponse = toint(ParsedData.TotalTimeServerResponse),
    Method = tostring(ParsedData.Method),
    Protocol = tostring(ParsedData.Protocol),
    Host = tostring(ParsedData.Host),
    URL = tostring(ParsedData.URL),
    UserAgent = tostring(ParsedData.UserAgent),
    XFF = tostring(ParsedData.XFF),
    NameID = tostring(ParsedData.NameID),
    StatusCode = toint(ParsedData.StatusCode),
    RequestSize = toint(ParsedData.RequestSize),
    ResponseSize = toint(ParsedData.ResponseSize),
    ApplicationPort = toint(ParsedData.ApplicationPort),
    ClientPublicIp = tostring(ParsedData.ClientPublicIp),
    ClientPublicPort = toint(ParsedData.ClientPublicPort),
    ClientPrivateIp = tostring(ParsedData.ClientPrivateIp),
    Customer = tostring(ParsedData.Customer),
    ConnectionStatus = tostring(ParsedData.ConnectionStatus),
    ConnectionReason = tostring(ParsedData.ConnectionReason),
    Origin = tostring(ParsedData.Origin),
    CorsToken = tostring(ParsedData.CorsToken),
    Message = Message;